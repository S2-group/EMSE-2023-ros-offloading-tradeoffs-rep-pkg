data$sim_period <- as.factor(data$sim_period)
data$num_of_packets <- as.numeric(data$num_of_packets)
data %>%
group_by(sim_period) %>%
get_summary_stats(num_of_packets, type = "mean_sd")
pdf(file = "../../figures/sim_time_effect/num-of-packets.pdf")
ggplot(data, aes(x = sim_period, y = num_of_packets, fill = sim_period)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Simulation time (s)", y = "Total number of packets (#)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 30, family = 'sans'),
axis.title.y = element_text(size = 30, family = 'sans'),
axis.text.x = element_text(size = 28, family = 'sans'),
axis.text.y = element_text(size = 28, family = 'sans'),
)
dev.off()
data %>%
group_by(sim_period) %>%
identify_outliers(num_of_packets)
ggqqplot(data, x = "num_of_packets", facet.by = "sim_period")
data %>%
group_by(sim_period) %>%
shapiro_test(num_of_packets)
data %>%
t_test(num_of_packets ~ sim_period) %>%
add_significance()
data %>%
cohens_d(num_of_packets ~ sim_period)
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_resolution/run_table.csv')
data <- subset(data, select = c(X__run_id, resolution, avg_cpu_util))
data$resolution <- as.factor(data$resolution, levels = c("640x480", "1280x960"))
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_resolution/run_table.csv')
data <- subset(data, select = c(X__run_id, resolution, avg_cpu_util))
data$resolution <- as.factor(data$resolution)
data$avg_cpu_util <- as.numeric(data$avg_cpu_util)
data %>%
group_by(resolution) %>%
get_summary_stats(avg_cpu_util, type = "mean_sd")
pdf(file = "../../figures/resolution_effect/cpu_usage.pdf")
ggplot(data, aes(x = resolution, y = avg_cpu_util, fill = resolution)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Resolution (px)", y = "Average CPU usage (%)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 30, family = 'sans'),
axis.title.y = element_text(size = 30, family = 'sans'),
axis.text.x = element_text(size = 30, family = 'sans'),
axis.text.y = element_text(size = 30, family = 'sans')
)
dev.off()
data %>%
group_by(resolution) %>%
identify_outliers(avg_cpu_util)
ggqqplot(data, x = "avg_cpu_util", facet.by = "resolution")
data %>%
group_by(resolution) %>%
shapiro_test(avg_cpu_util)
data %>%
t_test(avg_cpu_util ~ resolution) %>%
add_significance()
data %>%
cohens_d(avg_cpu_util ~ resolution)
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_resolution/run_table.csv')
data <- subset(data, select = c(X__run_id, resolution, avg_cpu_util))
data$resolution <- factor(data$resolution, levels = c("640x480", "1280x960"))
data$avg_cpu_util <- as.numeric(data$avg_cpu_util)
data %>%
group_by(resolution) %>%
get_summary_stats(avg_cpu_util, type = "mean_sd")
pdf(file = "../../figures/resolution_effect/cpu_usage.pdf")
ggplot(data, aes(x = resolution, y = avg_cpu_util, fill = resolution)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Resolution (px)", y = "Average CPU usage (%)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 30, family = 'sans'),
axis.title.y = element_text(size = 30, family = 'sans'),
axis.text.x = element_text(size = 30, family = 'sans'),
axis.text.y = element_text(size = 30, family = 'sans')
)
dev.off()
data %>%
group_by(resolution) %>%
identify_outliers(avg_cpu_util)
ggqqplot(data, x = "avg_cpu_util", facet.by = "resolution")
data %>%
group_by(resolution) %>%
shapiro_test(avg_cpu_util)
data %>%
t_test(avg_cpu_util ~ resolution) %>%
add_significance()
data %>%
cohens_d(avg_cpu_util ~ resolution)
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_resolution/run_table.csv')
data <- subset(data, select = c(X__run_id, resolution, recognition_ratio))
data$resolution <- factor(data$resolution, levels = c("640x480", "1280x960"))
data$recognition_ratio <- as.numeric(data$recognition_ratio)
data %>%
group_by(resolution) %>%
get_summary_stats(recognition_ratio, type = "mean_sd")
pdf(file = "../../figures/resolution_effect/detection_ratio.pdf")
ggplot(data, aes(x = resolution, y = recognition_ratio, fill = resolution)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Resolution (px)", y = "Recognition ration (%)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 30, family = 'sans'),
axis.title.y = element_text(size = 30, family = 'sans'),
axis.text.x = element_text(size = 30, family = 'sans'),
axis.text.y = element_text(size = 30, family = 'sans')
)
dev.off()
data %>%
group_by(resolution) %>%
identify_outliers(recognition_ratio)
ggqqplot(data, x = "recognition_ratio", facet.by = "resolution")
data %>%
group_by(resolution) %>%
shapiro_test(recognition_ratio)
data %>%
t_test(recognition_ratio ~ resolution) %>%
add_significance()
data %>%
cohens_d(recognition_ratio ~ resolution)
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_resolution/run_table.csv')
data <- subset(data, select = c(X__run_id, resolution, avg_detection_result_delay_ms))
data$resolution <- factor(data$resolution, levels = c("640x480", "1280x960"))
data$avg_detection_result_delay_ms <- as.numeric(data$avg_detection_result_delay_ms)
data %>%
group_by(resolution) %>%
get_summary_stats(avg_detection_result_delay_ms, type = "mean_sd")
pdf(file = "../../figures/resolution_effect/detection-result-delay.pdf")
ggplot(data, aes(x = resolution, y = avg_detection_result_delay_ms, fill = resolution)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Resolution (px)", y = "Average detection\nresult delay (ms)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 30, family = 'sans'),
axis.title.y = element_text(size = 30, family = 'sans'),
axis.text.x = element_text(size = 30, family = 'sans'),
axis.text.y = element_text(size = 30, family = 'sans')
)
dev.off()
data %>%
group_by(resolution) %>%
identify_outliers(avg_detection_result_delay_ms)
ggqqplot(data, x = "avg_detection_result_delay_ms", facet.by = "resolution")
data %>%
group_by(resolution) %>%
shapiro_test(avg_detection_result_delay_ms)
data %>%
t_test(avg_detection_result_delay_ms ~ resolution) %>%
add_significance()
data %>%
cohens_d(avg_detection_result_delay_ms ~ resolution)
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_resolution/run_table.csv')
data <- subset(data, select = c(X__run_id, resolution, avg_detection_time_ms))
data$resolution <- factor(data$resolution, levels = c("640x480", "1280x960"))
data$avg_detection_time_ms <- as.numeric(data$avg_detection_time_ms)
data %>%
group_by(resolution) %>%
get_summary_stats(avg_detection_time_ms, type = "mean_sd")
pdf(file = "../../figures/resolution_effect/detection_time.pdf")
ggplot(data, aes(x = resolution, y = avg_detection_time_ms, fill = resolution)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Resolution (px)", y = "Average object\ndetection time (ms)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 30, family = 'sans'),
axis.title.y = element_text(size = 30, family = 'sans'),
axis.text.x = element_text(size = 30, family = 'sans'),
axis.text.y = element_text(size = 30, family = 'sans')
)
dev.off()
data %>%
group_by(resolution) %>%
identify_outliers(avg_detection_time_ms)
ggqqplot(data, x = "avg_detection_time_ms", facet.by = "resolution")
data %>%
group_by(resolution) %>%
shapiro_test(avg_detection_time_ms)
data %>%
t_test(avg_detection_time_ms ~ resolution) %>%
add_significance()
data %>%
cohens_d(avg_detection_time_ms ~ resolution)
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_resolution/run_table.csv')
data <- subset(data, select = c(X__run_id, resolution, energy_J))
data$resolution <- factor(data$resolution, levels = c("640x480", "1280x960"))
data$energy_J <- as.numeric(data$energy_J)
data %>%
group_by(resolution) %>%
get_summary_stats(energy_J, type = "mean_sd")
pdf(file = "../../figures/resolution_effect/energy.pdf")
ggplot(data, aes(x = resolution, y = energy_J, fill = resolution)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Resolution (px)", y = "Total energy consumption (J)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 30, family = 'sans'),
axis.title.y = element_text(size = 30, family = 'sans'),
axis.text.x = element_text(size = 30, family = 'sans'),
axis.text.y = element_text(size = 30, family = 'sans')
)
dev.off()
data %>%
group_by(resolution) %>%
identify_outliers(energy_J)
ggqqplot(data, x = "energy_J", facet.by = "resolution")
data %>%
group_by(resolution) %>%
shapiro_test(energy_J)
data %>%
t_test(energy_J ~ resolution) %>%
add_significance()
data %>%
cohens_d(energy_J ~ resolution)
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_resolution/run_table.csv')
data <- subset(data, select = c(X__run_id, resolution, avg_extraction_time_ms))
data$resolution <- factor(data$resolution, levels = c("640x480", "1280x960"))
data$avg_extraction_time_ms <- as.numeric(data$avg_extraction_time_ms)
data %>%
group_by(resolution) %>%
get_summary_stats(avg_extraction_time_ms, type = "mean_sd")
pdf(file = "../../figures/resolution_effect/extraction-time.pdf")
ggplot(data, aes(x = resolution, y = avg_extraction_time_ms, fill = resolution)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Resolution (px)", y = "Average feature\nextraction time (ms)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 30, family = 'sans'),
axis.title.y = element_text(size = 30, family = 'sans'),
axis.text.x = element_text(size = 30, family = 'sans'),
axis.text.y = element_text(size = 30, family = 'sans')
)
dev.off()
data %>%
group_by(resolution) %>%
identify_outliers(avg_extraction_time_ms)
ggqqplot(data, x = "avg_extraction_time_ms", facet.by = "resolution")
data %>%
group_by(resolution) %>%
shapiro_test(avg_extraction_time_ms)
data %>%
t_test(avg_extraction_time_ms ~ resolution) %>%
add_significance()
data %>%
cohens_d(avg_extraction_time_ms ~ resolution)
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_resolution/run_table.csv')
data <- subset(data, select = c(X__run_id, resolution, mission_execution_s))
data$resolution <- factor(data$resolution, levels = c("640x480", "1280x960"))
data$mission_execution_s <- as.numeric(data$mission_execution_s)
data %>%
group_by(resolution) %>%
get_summary_stats(mission_execution_s, type = "mean_sd")
ggplot(data, aes(x = resolution, y = mission_execution_s, fill = resolution)) +
theme_bw() +
geom_boxplot(width = 0.5, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Resolution (px)", y = "Total mission execution (s)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 12, family = 'sans'),
axis.title.y = element_text(size = 12, family = 'sans'),
axis.text.x = element_text(size = 11, family = 'sans'),
axis.text.y = element_text(size = 11, family = 'sans'),
)
data %>%
group_by(resolution) %>%
identify_outliers(mission_execution_s)
ggqqplot(data, x = "mission_execution_s", facet.by = "resolution")
data %>%
group_by(resolution) %>%
shapiro_test(mission_execution_s)
data %>%
t_test(mission_execution_s ~ resolution) %>%
add_significance()
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_resolution/run_table.csv')
data$avg_navigation_time <- (data$avg_goal_sending_delay_ms + data$avg_goal_processing_s*1000 + data$avg_nav_result_delay_ms) / 1000
data <- subset(data, select = c(X__run_id, resolution, avg_navigation_time))
data$resolution <- factor(data$resolution, levels = c("640x480", "1280x960"))
data$avg_navigation_time <- as.numeric(data$avg_navigation_time)
data %>%
group_by(resolution) %>%
get_summary_stats(avg_navigation_time, type = "mean_sd")
ggplot(data, aes(x = resolution, y = avg_navigation_time, fill = resolution)) +
theme_bw() +
geom_boxplot(width = 0.5, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Resolution (px)", y = "Average navigation time (s)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 12, family = 'sans'),
axis.title.y = element_text(size = 12, family = 'sans'),
axis.text.x = element_text(size = 11, family = 'sans'),
axis.text.y = element_text(size = 11, family = 'sans'),
)
data %>%
group_by(resolution) %>%
identify_outliers(avg_navigation_time)
ggqqplot(data, x = "avg_navigation_time", facet.by = "resolution")
data %>%
group_by(resolution) %>%
shapiro_test(avg_navigation_time)
data %>%
t_test(avg_navigation_time ~ resolution) %>%
add_significance()
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_resolution/run_table.csv')
data <- subset(data, select = c(X__run_id, resolution, num_of_packets))
data$resolution <- factor(data$resolution, levels = c("640x480", "1280x960"))
data$num_of_packets <- as.numeric(data$num_of_packets)
data %>%
group_by(resolution) %>%
get_summary_stats(num_of_packets, type = "mean_sd")
pdf(file = "../../figures/resolution_effect/number-of-packets.pdf")
ggplot(data, aes(x = resolution, y = num_of_packets, fill = resolution)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Resolution (px)", y = "Total number of packets (#)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 30, family = 'sans'),
axis.title.y = element_text(size = 30, family = 'sans'),
axis.text.x = element_text(size = 30, family = 'sans'),
axis.text.y = element_text(size = 30, family = 'sans'),
)
dev.off()
data %>%
group_by(resolution) %>%
identify_outliers(num_of_packets)
ggqqplot(data, x = "num_of_packets", facet.by = "resolution")
data %>%
group_by(resolution) %>%
shapiro_test(num_of_packets)
data %>%
t_test(num_of_packets ~ resolution) %>%
add_significance()
data %>%
cohens_d(num_of_packets ~ resolution)
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_resolution/run_table.csv')
data$size_of_packets <- data$size_of_packets / 1000000
data <- subset(data, select = c(X__run_id, resolution, size_of_packets))
data$resolution <- factor(data$resolution, levels = c("640x480", "1280x960"))
data$size_of_packets <- as.numeric(data$size_of_packets)
data %>%
group_by(resolution) %>%
get_summary_stats(size_of_packets, type = "mean_sd")
pdf(file = "../../figures/resolution_effect/size-of-packets.pdf")
ggplot(data, aes(x = resolution, y = size_of_packets, fill = resolution)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Resolution (px)", y = "Total size of packets (MB)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 30, family = 'sans'),
axis.title.y = element_text(size = 30, family = 'sans'),
axis.text.x = element_text(size = 30, family = 'sans'),
axis.text.y = element_text(size = 30, family = 'sans'),
)
dev.off()
data %>%
group_by(resolution) %>%
identify_outliers(size_of_packets)
ggqqplot(data, x = "size_of_packets", facet.by = "resolution")
data %>%
group_by(resolution) %>%
shapiro_test(size_of_packets)
data %>%
t_test(size_of_packets ~ resolution) %>%
add_significance()
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_resolution/run_table.csv')
data$avg_memory_util <- data$avg_memory_util / 1000000
data <- subset(data, select = c(X__run_id, resolution, avg_memory_util))
data$resolution <- factor(data$resolution, levels = c("640x480", "1280x960"))
data$avg_memory_util <- as.numeric(data$avg_memory_util)
data %>%
group_by(resolution) %>%
get_summary_stats(avg_memory_util, type = "mean_sd")
pdf(file = "../../figures/resolution_effect/ram-utilisation.pdf")
ggplot(data, aes(x = resolution, y = avg_memory_util, fill = resolution)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Resolution (px)", y = "Average RAM utilisation (MB)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 30, family = 'sans'),
axis.title.y = element_text(size = 30, family = 'sans'),
axis.text.x = element_text(size = 30, family = 'sans'),
axis.text.y = element_text(size = 30, family = 'sans'),
)
data %>%
group_by(resolution) %>%
identify_outliers(avg_memory_util)
ggqqplot(data, x = "avg_memory_util", facet.by = "resolution")
data %>%
group_by(resolution) %>%
shapiro_test(avg_memory_util)
data %>%
t_test(avg_memory_util ~ resolution) %>%
add_significance()
data %>%
cohens_d(avg_memory_util ~ resolution)
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_resolution/run_table.csv')
data$avg_memory_util <- data$avg_memory_util / 1000000
data <- subset(data, select = c(X__run_id, resolution, avg_memory_util))
data$resolution <- factor(data$resolution, levels = c("640x480", "1280x960"))
data$avg_memory_util <- as.numeric(data$avg_memory_util)
data %>%
group_by(resolution) %>%
get_summary_stats(avg_memory_util, type = "mean_sd")
pdf(file = "../../figures/resolution_effect/ram-utilisation.pdf")
ggplot(data, aes(x = resolution, y = avg_memory_util, fill = resolution)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Resolution (px)", y = "Average RAM utilisation (MB)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 30, family = 'sans'),
axis.title.y = element_text(size = 30, family = 'sans'),
axis.text.x = element_text(size = 30, family = 'sans'),
axis.text.y = element_text(size = 30, family = 'sans'),
)
dev.off()
data %>%
group_by(resolution) %>%
identify_outliers(avg_memory_util)
ggqqplot(data, x = "avg_memory_util", facet.by = "resolution")
data %>%
group_by(resolution) %>%
shapiro_test(avg_memory_util)
data %>%
t_test(avg_memory_util ~ resolution) %>%
add_significance()
data %>%
cohens_d(avg_memory_util ~ resolution)
