if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_temporal_updates/run_table.csv')
data <- subset(data, select = c(X__run_id, temporal_updates, num_of_packets))
data$temporal_updates <- as.factor(data$temporal_updates)
data$num_of_packets <- as.numeric(data$num_of_packets)
data %>%
group_by(temporal_updates) %>%
get_summary_stats(num_of_packets, type = "mean_sd")
ggplot(data, aes(x = temporal_updates, y = num_of_packets, fill = temporal_updates)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Temporal updates", y = "Total number of packets (#)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 12, family = 'sans'),
axis.title.y = element_text(size = 12, family = 'sans'),
axis.text.x = element_text(size = 11, family = 'sans'),
axis.text.y = element_text(size = 11, family = 'sans'),
)
data %>%
group_by(temporal_updates) %>%
identify_outliers(num_of_packets)
ggqqplot(data, x = "num_of_packets", facet.by = "temporal_updates")
data %>%
group_by(temporal_updates) %>%
shapiro_test(num_of_packets)
data %>%
rstatix::wilcox_test(num_of_packets ~ temporal_updates) %>%
add_significance()
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_temporal_updates/run_table.csv')
data <- subset(data, select = c(X__run_id, temporal_updates, num_of_packets))
data$temporal_updates <- as.factor(data$temporal_updates)
data$num_of_packets <- as.numeric(data$num_of_packets)
data %>%
group_by(temporal_updates) %>%
get_summary_stats(num_of_packets, type = "mean_sd")
ggplot(data, aes(x = temporal_updates, y = num_of_packets, fill = temporal_updates)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Temporal updates", y = "Total number of packets (#)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 12, family = 'sans'),
axis.title.y = element_text(size = 12, family = 'sans'),
axis.text.x = element_text(size = 11, family = 'sans'),
axis.text.y = element_text(size = 11, family = 'sans')
)
data %>%
group_by(temporal_updates) %>%
identify_outliers(num_of_packets)
ggqqplot(data, x = "num_of_packets", facet.by = "temporal_updates")
data %>%
group_by(temporal_updates) %>%
shapiro_test(num_of_packets)
data %>%
rstatix::wilcox_test(num_of_packets ~ temporal_updates) %>%
add_significance()
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_temporal_updates/run_table.csv')
data$avg_memory_util <- data$avg_memory_util / 1000000
data <- subset(data, select = c(X__run_id, temporal_updates, avg_memory_util))
data$temporal_updates <- as.factor(data$temporal_updates)
data$avg_memory_util <- as.numeric(data$avg_memory_util)
data %>%
group_by(temporal_updates) %>%
get_summary_stats(avg_memory_util, type = "mean_sd")
ggplot(data, aes(x = temporal_updates, y = avg_memory_util, fill = temporal_updates)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Temporal updates", y = "Average RAM utilisation (MB)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 12, family = 'sans'),
axis.title.y = element_text(size = 12, family = 'sans'),
axis.text.x = element_text(size = 11, family = 'sans'),
axis.text.y = element_text(size = 11, family = 'sans')
)
data %>%
group_by(temporal_updates) %>%
identify_outliers(avg_memory_util)
ggqqplot(data, x = "avg_memory_util", facet.by = "temporal_updates")
data %>%
group_by(temporal_updates) %>%
shapiro_test(avg_memory_util)
data %>%
rstatix::wilcox_test(avg_memory_util ~ temporal_updates) %>%
add_significance()
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_temporal_updates/run_table.csv')
data$size_of_packets <- data$size_of_packets / 1000000
data <- subset(data, select = c(X__run_id, temporal_updates, size_of_packets))
data$temporal_updates <- as.factor(data$temporal_updates)
data$size_of_packets <- as.numeric(data$size_of_packets)
data %>%
group_by(temporal_updates) %>%
get_summary_stats(size_of_packets, type = "mean_sd")
ggplot(data, aes(x = temporal_updates, y = size_of_packets, fill = temporal_updates)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Temporal updates", y = "Total size of packets (MB)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 12, family = 'sans'),
axis.title.y = element_text(size = 12, family = 'sans'),
axis.text.x = element_text(size = 11, family = 'sans'),
axis.text.y = element_text(size = 11, family = 'sans')
)
data %>%
group_by(temporal_updates) %>%
identify_outliers(size_of_packets)
ggqqplot(data, x = "size_of_packets", facet.by = "temporal_updates")
data %>%
group_by(temporal_updates) %>%
shapiro_test(size_of_packets)
data %>%
t_test(size_of_packets ~ temporal_updates) %>%
add_significance()
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
if (!require('coin')) install.packages('coin', dependencies = TRUE); library('coin')
data <- read.csv(file = '../../raw_data/test_velocity_samples/run_table.csv')
data <- subset(data, select = c(X__run_id, velocity_samples, avg_cpu_util))
data$velocity_samples <- as.factor(data$velocity_samples)
data$avg_cpu_util <- as.numeric(data$avg_cpu_util)
data %>%
group_by(velocity_samples) %>%
get_summary_stats(avg_cpu_util, type = "mean_sd")
#pdf(file = "../../figures/velocity_samples_effect/cpu-usage.pdf")
ggplot(data, aes(x = velocity_samples, y = avg_cpu_util, fill = velocity_samples)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Number of translation and\nrotation velocity samples (#)", y = "Average CPU usage (%)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 12, family = 'sans'),
axis.title.y = element_text(size = 12, family = 'sans'),
axis.text.x = element_text(size = 11, family = 'sans'),
axis.text.y = element_text(size = 11, family = 'sans')
)
#dev.off()
data %>%
group_by(velocity_samples) %>%
identify_outliers(avg_cpu_util)
ggqqplot(data, x = "avg_cpu_util", facet.by = "velocity_samples")
data %>%
group_by(velocity_samples) %>%
shapiro_test(avg_cpu_util)
data %>%
t_test(avg_cpu_util ~ velocity_samples) %>%
add_significance()
data %>%
cohens_d(avg_cpu_util ~ velocity_samples)
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_velocity_samples/run_table.csv')
data <- subset(data, select = c(X__run_id, velocity_samples, avg_detection_result_delay_ms))
data$velocity_samples <- as.factor(data$velocity_samples)
data$avg_detection_result_delay_ms <- as.numeric(data$avg_detection_result_delay_ms)
data %>%
group_by(velocity_samples) %>%
get_summary_stats(avg_detection_result_delay_ms, type = "mean_sd")
ggplot(data, aes(x = velocity_samples, y = avg_detection_result_delay_ms, fill = velocity_samples)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Number of translation and rotation velocity samples (#)", y = "Average detection result delay (ms)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 12, family = 'sans'),
axis.title.y = element_text(size = 12, family = 'sans'),
axis.text.x = element_text(size = 11, family = 'sans'),
axis.text.y = element_text(size = 11, family = 'sans'),
)
data %>%
group_by(velocity_samples) %>%
identify_outliers(avg_detection_result_delay_ms)
ggqqplot(data, x = "avg_detection_result_delay_ms", facet.by = "velocity_samples")
data %>%
group_by(velocity_samples) %>%
shapiro_test(avg_detection_result_delay_ms)
data %>%
t_test(avg_detection_result_delay_ms ~ velocity_samples) %>%
add_significance()
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_velocity_samples/run_table.csv')
data <- subset(data, select = c(X__run_id, velocity_samples, avg_detection_time_ms))
data$velocity_samples <- as.factor(data$velocity_samples)
data$avg_detection_time_ms <- as.numeric(data$avg_detection_time_ms)
data %>%
group_by(velocity_samples) %>%
get_summary_stats(avg_detection_time_ms, type = "mean_sd")
ggplot(data, aes(x = velocity_samples, y = avg_detection_time_ms, fill = velocity_samples)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Number of translation and rotation velocity samples (#)", y = "Average object detection time (ms)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 12, family = 'sans'),
axis.title.y = element_text(size = 12, family = 'sans'),
axis.text.x = element_text(size = 11, family = 'sans'),
axis.text.y = element_text(size = 11, family = 'sans')
)
data %>%
group_by(velocity_samples) %>%
identify_outliers(avg_detection_time_ms)
ggqqplot(data, x = "avg_detection_time_ms", facet.by = "velocity_samples")
data %>%
group_by(velocity_samples) %>%
shapiro_test(avg_detection_time_ms)
data %>%
t_test(avg_detection_time_ms ~ velocity_samples) %>%
add_significance()
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_velocity_samples/run_table.csv')
data <- subset(data, select = c(X__run_id, velocity_samples, energy_J))
data$velocity_samples <- as.factor(data$velocity_samples)
data$energy_J <- as.numeric(data$energy_J)
data %>%
group_by(velocity_samples) %>%
get_summary_stats(energy_J, type = "mean_sd")
ggplot(data, aes(x = velocity_samples, y = energy_J, fill = velocity_samples)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Number of translation and rotation velocity samples (#)", y = "Total energy consumption (J)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 12, family = 'sans'),
axis.title.y = element_text(size = 12, family = 'sans'),
axis.text.x = element_text(size = 11, family = 'sans'),
axis.text.y = element_text(size = 11, family = 'sans')
)
data %>%
group_by(velocity_samples) %>%
identify_outliers(energy_J)
ggqqplot(data, x = "energy_J", facet.by = "velocity_samples")
data %>%
group_by(velocity_samples) %>%
shapiro_test(energy_J)
data %>%
t_test(energy_J ~ velocity_samples) %>%
add_significance()
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_velocity_samples/run_table.csv')
data <- subset(data, select = c(X__run_id, velocity_samples, avg_extraction_time_ms))
data$velocity_samples <- as.factor(data$velocity_samples)
data$avg_extraction_time_ms <- as.numeric(data$avg_extraction_time_ms)
data %>%
group_by(velocity_samples) %>%
get_summary_stats(avg_extraction_time_ms, type = "mean_sd")
ggplot(data, aes(x = velocity_samples, y = avg_extraction_time_ms, fill = velocity_samples)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Number of translation and rotation velocity samples (#)", y = "Average feature extraction time (ms)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 12, family = 'sans'),
axis.title.y = element_text(size = 12, family = 'sans'),
axis.text.x = element_text(size = 11, family = 'sans'),
axis.text.y = element_text(size = 11, family = 'sans')
)
data %>%
group_by(velocity_samples) %>%
identify_outliers(avg_extraction_time_ms)
ggqqplot(data, x = "avg_extraction_time_ms", facet.by = "velocity_samples")
data %>%
group_by(velocity_samples) %>%
shapiro_test(avg_extraction_time_ms)
data %>%
t_test(avg_extraction_time_ms ~ velocity_samples) %>%
add_significance()
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
if (!require('coin')) install.packages('coin', dependencies = TRUE); library('coin')
data <- read.csv(file = '../../raw_data/test_velocity_samples/run_table.csv')
data <- subset(data, select = c(X__run_id, velocity_samples, avg_cpu_util))
data$velocity_samples <- as.factor(data$velocity_samples)
data$avg_cpu_util <- as.numeric(data$avg_cpu_util)
data %>%
group_by(velocity_samples) %>%
get_summary_stats(avg_cpu_util, type = "mean_sd")
#pdf(file = "../../figures/velocity_samples_effect/cpu-usage.pdf")
ggplot(data, aes(x = velocity_samples, y = avg_cpu_util, fill = velocity_samples)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Number of translation and rotation velocity samples (#)", y = "Average CPU usage (%)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 12, family = 'sans'),
axis.title.y = element_text(size = 12, family = 'sans'),
axis.text.x = element_text(size = 11, family = 'sans'),
axis.text.y = element_text(size = 11, family = 'sans')
)
#dev.off()
data %>%
group_by(velocity_samples) %>%
identify_outliers(avg_cpu_util)
ggqqplot(data, x = "avg_cpu_util", facet.by = "velocity_samples")
data %>%
group_by(velocity_samples) %>%
shapiro_test(avg_cpu_util)
data %>%
t_test(avg_cpu_util ~ velocity_samples) %>%
add_significance()
data %>%
cohens_d(avg_cpu_util ~ velocity_samples)
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_velocity_samples/run_table.csv')
data <- subset(data, select = c(X__run_id, velocity_samples, mission_execution_s))
data$velocity_samples <- as.factor(data$velocity_samples)
data$mission_execution_s <- as.numeric(data$mission_execution_s)
data %>%
group_by(velocity_samples) %>%
get_summary_stats(mission_execution_s, type = "mean_sd")
ggplot(data, aes(x = velocity_samples, y = mission_execution_s, fill = velocity_samples)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Number of translation and rotation velocity samples (#)", y = "Total mission execution (s)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 12, family = 'sans'),
axis.title.y = element_text(size = 12, family = 'sans'),
axis.text.x = element_text(size = 11, family = 'sans'),
axis.text.y = element_text(size = 11, family = 'sans')
)
data %>%
group_by(velocity_samples) %>%
identify_outliers(mission_execution_s)
ggqqplot(data, x = "mission_execution_s", facet.by = "velocity_samples")
data %>%
group_by(velocity_samples) %>%
shapiro_test(mission_execution_s)
data %>%
t_test(mission_execution_s ~ velocity_samples) %>%
add_significance()
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_velocity_samples/run_table.csv')
data$avg_navigation_time_ms <- (data$avg_goal_sending_delay_ms + data$avg_goal_processing_s*1000 + data$avg_nav_result_delay_ms) / 1000
data <- subset(data, select = c(X__run_id, velocity_samples, avg_navigation_time_ms))
data$velocity_samples <- as.factor(data$velocity_samples)
data$avg_navigation_time_ms <- as.numeric(data$avg_navigation_time_ms)
data %>%
group_by(velocity_samples) %>%
get_summary_stats(avg_navigation_time_ms, type = "mean_sd")
ggplot(data, aes(x = velocity_samples, y = avg_navigation_time_ms, fill = velocity_samples)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Number of translation and rotation velocity samples (#)", y = "Average navigation time (s)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 12, family = 'sans'),
axis.title.y = element_text(size = 12, family = 'sans'),
axis.text.x = element_text(size = 11, family = 'sans'),
axis.text.y = element_text(size = 11, family = 'sans')
)
data %>%
group_by(velocity_samples) %>%
identify_outliers(avg_navigation_time_ms)
ggqqplot(data, x = "avg_navigation_time_ms", facet.by = "velocity_samples")
data %>%
group_by(velocity_samples) %>%
shapiro_test(avg_navigation_time_ms)
data %>%
t_test(avg_navigation_time_ms ~ velocity_samples) %>%
add_significance()
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_velocity_samples/run_table.csv')
data <- subset(data, select = c(X__run_id, velocity_samples, num_of_packets))
data$velocity_samples <- as.factor(data$velocity_samples)
data$num_of_packets <- as.numeric(data$num_of_packets)
data %>%
group_by(velocity_samples) %>%
get_summary_stats(num_of_packets, type = "mean_sd")
ggplot(data, aes(x = velocity_samples, y = num_of_packets, fill = velocity_samples)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Number of translation and rotation velocity samples", y = "Total number of packets (#)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 12, family = 'sans'),
axis.title.y = element_text(size = 12, family = 'sans'),
axis.text.x = element_text(size = 11, family = 'sans'),
axis.text.y = element_text(size = 11, family = 'sans')
)
data %>%
group_by(velocity_samples) %>%
identify_outliers(num_of_packets)
ggqqplot(data, x = "num_of_packets", facet.by = "velocity_samples")
data %>%
group_by(velocity_samples) %>%
shapiro_test(num_of_packets)
data %>%
t_test(num_of_packets ~ velocity_samples) %>%
add_significance()
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_velocity_samples/run_table.csv')
data$avg_memory_util <- data$avg_memory_util / 1000000
data <- subset(data, select = c(X__run_id, velocity_samples, avg_memory_util))
data$velocity_samples <- as.factor(data$velocity_samples)
data$avg_memory_util <- as.numeric(data$avg_memory_util)
data %>%
group_by(velocity_samples) %>%
get_summary_stats(avg_memory_util, type = "mean_sd")
#pdf(file = "../../figures/velocity_samples_effect/ram-utilisation.pdf")
ggplot(data, aes(x = velocity_samples, y = avg_memory_util, fill = velocity_samples)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Number of translation and rotation velocity samples (#)", y = "Average RAM utilisation (MB)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 12, family = 'sans'),
axis.title.y = element_text(size = 12, family = 'sans'),
axis.text.x = element_text(size = 11, family = 'sans'),
axis.text.y = element_text(size = 11, family = 'sans')
)
#dev.off()
data %>%
group_by(velocity_samples) %>%
identify_outliers(avg_memory_util)
ggqqplot(data, x = "avg_memory_util", facet.by = "velocity_samples")
data %>%
group_by(velocity_samples) %>%
shapiro_test(avg_memory_util)
data %>%
t_test(avg_memory_util ~ velocity_samples) %>%
add_significance()
data %>%
cohens_d(avg_memory_util ~ velocity_samples)
if (!require('tidyverse')) install.packages('tidyverse', dependencies = TRUE); library('tidyverse')
if (!require('ggpubr')) install.packages('ggpubr', dependencies = TRUE); library('ggpubr')
if (!require('rstatix')) install.packages('rstatix', dependencies = TRUE); library('rstatix')
if (!require('ggplot2')) install.packages('ggplot2', dependencies = TRUE); library('ggplot2')
data <- read.csv(file = '../../raw_data/test_velocity_samples/run_table.csv')
data$size_of_packets <- data$size_of_packets / 1000000
data <- subset(data, select = c(X__run_id, velocity_samples, size_of_packets))
data$velocity_samples <- as.factor(data$velocity_samples)
data$size_of_packets <- as.numeric(data$size_of_packets)
data %>%
group_by(velocity_samples) %>%
get_summary_stats(size_of_packets, type = "mean_sd")
ggplot(data, aes(x = velocity_samples, y = size_of_packets, fill = velocity_samples)) +
theme_bw() +
geom_boxplot(width = 0.9, outlier.size = 0.5) +
stat_summary(fun = mean, color = 'black', geom = 'point', shape = 5, size = 1.5) +
labs(x = "Number of translation and rotation velocity samples (#)", y = "Total size of packets (MB)") +
theme(legend.position = 'none') +
theme(
axis.title.x = element_text(size = 12, family = 'sans'),
axis.title.y = element_text(size = 12, family = 'sans'),
axis.text.x = element_text(size = 11, family = 'sans'),
axis.text.y = element_text(size = 11, family = 'sans')
)
data %>%
group_by(velocity_samples) %>%
identify_outliers(size_of_packets)
ggqqplot(data, x = "size_of_packets", facet.by = "velocity_samples")
data %>%
group_by(velocity_samples) %>%
shapiro_test(size_of_packets)
data %>%
t_test(size_of_packets ~ velocity_samples) %>%
add_significance()
